//Brute Force Approach

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {

        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            nums[i]=nums[i]*nums[i];
        }

        sort(nums.begin(),nums.end());          //O(nlogn)

        return nums;
        
    }
};


//n complexity

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {

        int n=nums.size();
        int left=0;
        int right=n-1;
        vector<int>ans(n,0);
        int i=n-1;

        while(left<=right)
        {
            int temp=max(nums[left]*nums[left],nums[right]*nums[right]);
            ans[i]=temp;
            i--;

            if(abs(nums[left])<abs(nums[right]))
            {
                right--;
            }

            else
            left++;
        }

        return ans;

        
    }
};
